# ******************************************************************************
# IBM Cloud Kubernetes Service, 5737-D43
# (C) Copyright IBM Corp. 2021 All Rights Reserved.
#
# SPDX-License-Identifier: Apache2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ******************************************************************************

# NOTE(jonesbr): Copied from https://github.com/ibm/detect-secrets/blob/master/.pre-commit-config.yaml
# This is an example configuration to enable detect-secrets in the pre-commit hook.
# Add this file to the root folder of your repository.
#
# Read pre-commit hook framework https://pre-commit.com/ for more details about the structure of config yaml file and how git pre-commit would invoke each hook.
#
# This line indicates we will use the hook from ibm/detect-secrets to run scan during committing phase.
# Whitewater/whitewater-detect-secrets would sync code to ibm/detect-secrets upon merge.
repos:
- repo: https://github.com/ibm/detect-secrets
  # If you desire to use a specific version of detect-secrets, you can replace `master` with other git revisions such as branch, tag or commit sha.
  # You are encouraged to use static refs such as tags, instead of branch name
  #
  # Running "pre-commit autoupdate" would automatically updates rev to latest tag
  rev: 0.13.1+ibm.46.dss
  hooks:
  - id: detect-secrets # pragma: whitelist secret
    # Add options for detect-secrets-hook binary. You can run `detect-secrets-hook --help` to list out all possible options.
    # You may also run `pre-commit run detect-secrets` to preview the scan result.
    # when "--baseline" without "--use-all-plugins", pre-commit scan with just plugins in baseline file
    # when "--baseline" with "--use-all-plugins", pre-commit scan with all available plugins
    # add "--fail-on-non-audited" to fail pre-commit for unaudited potential secrets
    args: [--baseline, .secrets.baseline, --use-all-plugins ]
